export const GENERATED_EDITOR_LIB = "/**\n * @monaco\n */\ninterface LocalAccount {\n    name: string;\n    envId: number;\n    env: CountryEnvironmentModel;\n    beesId: string;\n    customerAccountId: string;\n    vendorAccountId: string;\n} interface BeesAccountOwner {\n    email?: string;\n    firstName?: string;\n    lastName?: string;\n    phone?: string;\n} interface Credit {\n    balance?: number;\n    overdue?: number;\n    available?: number;\n    paymentTerms?: string | null;\n    total?: number;\n    updatedAt?: string;\n    consumption?: number;\n} interface BeesAccountAddress {\n    address?: string;\n    city?: string;\n    state?: string;\n    zipcode?: string;\n    latitude?: string;\n    longitude?: string;\n} interface DeliveryWindow {\n    updatedAt?: string;\n    deliveryWindowId?: string;\n    deliveryScheduleId?: string;\n    startDate?: string;\n    endDate?: string;\n    expirationDate?: string;\n    alternative?: boolean;\n    vendorId?: string;\n} interface SalesRepresentative {\n    email?: string;\n    name?: string;\n    phone?: string;\n} interface Supervisor {\n    email?: string;\n    name?: string;\n    phone?: string;\n} interface BeesAccountRepresentative {\n    email?: string;\n    name?: string;\n    phone?: string;\n    primary?: boolean;\n    productTypes?: string[];\n    role?: string;\n    supervisor?: Supervisor;\n} interface TermPeriod {\n    days?: number;\n} interface BeesAccountPaymentTerm {\n    type?: string;\n    termPeriods?: TermPeriod[];\n} interface LiquorLicense {\n    description?: string;\n    expirationDate?: string;\n    number?: string;\n    status?: string;\n    type?: string;\n} interface BeesAccountMinimumOrder {\n    type?: string;\n    value?: number;\n    paymentMethods?: string[];\n} interface BeesAccountMaximumOrder {\n    type?: string;\n    value?: number;\n    paymentMethods?: string[];\n} interface Contact {\n    type?: string;\n    value?: string;\n} /**\n * @monaco\n * @monaco_include_deps\n */\ninterface AccountV1 {\n    country: string;\n    updatedAt: string;\n    accountId: string;\n    vendorId: string;\n    vendorAccountId: string;\n    customerAccountId: string;\n    credit?: Credit;\n    deliveryAddress?: BeesAccountAddress;\n    billingAddress?: BeesAccountAddress;\n    deliveryCenterId?: string;\n    deliveryScheduleId?: string;\n    deliveryWindows?: DeliveryWindow[];\n    liquorLicense?: LiquorLicense[];\n    name: string;\n    owner?: BeesAccountOwner;\n    paymentMethods: string[];\n    priceListId?: string;\n    salesRepresentative?: SalesRepresentative;\n    status: string;\n    taxId?: string | null;\n    paymentTerms?: BeesAccountPaymentTerm[];\n    minimumOrder?: BeesAccountMinimumOrder;\n    maximumOrder?: BeesAccountMaximumOrder;\n    segment?: string;\n    channel?: string;\n    subSegment?: string;\n    erpSalesCenter?: string;\n    salesRoute?: string;\n    potential?: string;\n    deliveryRegion?: string;\n    deliveryRoute?: string;\n    contacts?: Contact[];\n    challengeIds?: string[];\n    createdAt?: string;\n    legalName?: string;\n    displayName?: string;\n    timezone?: string;\n    representatives?: BeesAccountRepresentative[];\n    hasEmptiesLoan?: boolean;\n    hasOverprice?: boolean;\n    hasPONumberRequirement?: boolean;\n    isKeyAccount?: boolean;\n} /**\n * @monaco\n */\ninterface CountryEnvironmentModel {\n    id: number;\n    envName: string;\n    env: Env;\n    countryCode: string;\n    vendorId: string;\n    storeId: string;\n    timezone: string;\n    defaultLanguage: CountryEnvironmentLanguageModel;\n    languages: CountryEnvironmentLanguageModel[];\n    singleLanguage: boolean;\n} /**\n * @monaco\n */\ninterface CountryEnvironmentCredsPayload {\n    envId: string;\n    clientId: string;\n    clientSecret: string;\n} /**\n * @monaco\n */\ninterface RequestTemplateArg {\n    id: number | null;\n    type: RequestTemplateArgType;\n    keyName: string;\n    value: string | null;\n    name: string;\n} /**\n * @monaco\n * @monaco_include_deps\n */\ninterface GrowOrganization {\n    active: boolean;\n    country: string;\n    createdDate: string;\n    creatorId: string;\n    description: string;\n    id: string;\n    logoUrl: string;\n    name: string;\n    updatedDate: string;\n    updaterId: string;\n    users: GrowOrganizationUser[];\n    vendors: GrowOrganizationVendor[];\n} interface GrowOrganizationVendor {\n    id: string;\n    name: string;\n    serviceModel: string;\n} interface GrowOrganizationUser {\n    groupAllocated: boolean;\n    id: string; // Email\n    initials: string;\n    name: string;\n} /**\n * @monaco\n */\ninterface GrowOrganizationPayload {\n    description: string;\n    logoUrl: string;\n    name: string;\n    userIds: string[];\n    vendorIds: string[];\n} /**\n * @monaco\n * @monaco_include_deps\n */\ninterface GrowGroupPayload {\n    name: string;\n    color: string;\n    description: string;\n    dialingMethod: string;\n    missions: GrowGroupMission[];\n    userIds: string[];\n    targetKpi: GrowGroupKpi[];\n    vendors: GrowGroupVendorPayload[];\n} interface GrowGroupVendorPayload {\n    id: string;\n    segmentations: {\n        key: string;\n        values: string[];\n    }[];\n} /**\n * @monaco\n */\ninterface GenericPickerOption<T> {\n    displayName: string;\n    obj: T;\n} /**\n * @monaco\n */\ninterface GenericPickerResponse<T> {\n    items: T[];\n} /**\n * @monaco\n */\ninterface BeesToken {\n    token: string;\n    expires: Date;\n    envId: number;\n    serialize(): any;\n    isExpired(): boolean;\n} /**\n * @monaco\n */\ninterface IGrowService {\n    getOrgs(tempToken: string, env: CountryEnvironmentModel, userEmail?: string): Promise<WrappedResponse<GrowOrganization[]>>;\n    convertOrgToOrgPayload(org: GrowOrganization): GrowOrganizationPayload;\n    updateOrg(tempToken: string, orgId: string, env: CountryEnvironmentModel, payload: GrowOrganizationPayload): Promise<WrappedResponse<any>>;\n    getGroups(tempToken: string, orgId: string, env: CountryEnvironmentModel, userEmail?: string): Promise<WrappedResponse<GrowGroup[]>>;\n    createGroup(tempToken: string, orgId: string, env: CountryEnvironmentModel, payload: GrowGroupPayload): Promise<WrappedResponse<any>>;\n    updateGroup(tempToken: string, orgId: string, groupId: string, env: CountryEnvironmentModel, payload: GrowGroupPayload): Promise<WrappedResponse<any>>;\n    createUser(tempToken: string, env: CountryEnvironmentModel, payload: GrowUserPayload[]): Promise<WrappedResponse<any>>;\n} /**\n * @monaco\n */\ninterface BeesResponse<TResponse> {\n    requestTraceId: string;\n    entity: BeesEntity;\n    env: CountryEnvironmentModel;\n    response: TResponse;\n    statusCode: number;\n} /**\n * @monaco\n * @monaco_include_deps\n */\ninterface GrowGroup {\n    id: string;\n    color: string;\n    country: string;\n    createdDate: string;\n    creatorId: string;\n    description: string;\n    dialingMethod: string;\n    missions: GrowGroupMission[];\n    name: string;\n    organization: {\n        active: boolean;\n        id: string;\n    };\n    targetKpi: GrowGroupKpi[];\n    updatedDate: string;\n    updaterId: string;\n    users: GrowGroupUser[];\n    vendors: GrowGroupVendor[];\n} interface GrowGroupMission {\n    missionId: string;\n    missionKey: string;\n    type: string;\n} interface GrowGroupKpi {\n    daily: number;\n    invisible: boolean;\n    monthly: number;\n    type: string;\n} interface GrowGroupUser {\n    id: string;\n    initials: string;\n    name: string;\n} interface GrowGroupVendor {\n    id: string;\n    name: string;\n    segmentations: {\n        key: string;\n        values: string[];\n    }[];\n} /**\n * @monaco\n * @monaco_include_deps\n */\ninterface BeesContract {\n    id: string;\n    vendorAccountId: string;\n    vendorId: string;\n    accountId: string;\n    legacyAccountId: string;\n    customerAccountId: string;\n    displayName: string;\n    legalName: string;\n    deliveryScheduleId: string;\n    deliveryCenterId: string;\n    taxId: string;\n    priceListId: string;\n    additionalInformation: any;\n    challengeIds: string[];\n    channel: string;\n    createdAt: string;\n    updatedAt: string;\n    deliveryAddress: BeesAccountAddress;\n    liquorLicense: string[];\n    maximumOrder: BeesAccountMaximumOrder;\n    minimumOrder: BeesAccountMinimumOrder;\n    owner: BeesAccountOwner;\n    paymentMethods: string[];\n    paymentTerms: BeesAccountPaymentTerm[];\n    potential: string;\n    representatives: BeesAccountRepresentative[];\n    segment: string;\n    status: string;\n    timezone: string;\n    classificationType: string;\n    businessAttributes: any[];\n    hasEmptiesLoan: boolean;\n    hasOverprice: boolean;\n    hasPONumberRequirement: boolean;\n    isKeyAccount: boolean;\n} /**\n * @monaco\n */\ninterface IBeesContractService {\n    findTopByDdc(maxResults: number, ddc: string, env: CountryEnvironmentModel): Promise<WrappedResponse<PageWithPagination<BeesContract>>>;\n} /**\n * @monaco\n */\ninterface Pagination {\n    page: number;\n    pageSize: number;\n    totalElements: number;\n    totalPages: number;\n} /**\n * @monaco\n */\ninterface PaginationV2 {\n    page: number;\n    pageSize: number;\n    totalElements: number;\n    totalPage: number;\n} /**\n * @monaco\n */\ninterface PageWithPagination<T> {\n    content: T[];\n    pagination: Pagination;\n} /**\n * @monaco\n */\ninterface HasNextPagination {\n    hasNext: boolean;\n    page: number;\n} /**\n * @monaco\n */\ninterface HasMorePagination {\n    hasMore: boolean;\n    page: number;\n} /**\n * @monaco\n */\ninterface Page<T> {\n    content: T[];\n    totalPages: number;\n    totalElements: number;\n    pageable: LocalPageRequest;\n} /**\n * @monaco\n */\ninterface IOrderService {\n    searchOrders(query: OrderQuery, env?: CountryEnvironmentModel): Promise<WrappedResponse<OrderSearchResult>>;\n    fetchAllPages(query: OrderQuery, env?: CountryEnvironmentModel): Promise<Order[]>;\n    createQuery(): OrderQuery;\n} /**\n * @monaco\n */\ninterface OrderQuery {\n    page: PageRequest; // page and limit\n    orderStatus: OrderStatus;\n    beesAccountId?: string;\n    deliveryCenterId?: string;\n    endDeliveryDate?: string; // 2022-05-09 inclusive\n    startDeliveryDate?: string; //2022-05-09 inclusive\n    orderBy: OrderOrderbyType[];\n    orderIds: string[];\n    orderStatusCondition: OrderStatusCondition;\n    sort: SortDirection;\n    updatedSince?: string; //ISO date time\n    vendorAccountId?: string;\n    vendorId?: string;\n    vendorOrderNumber?: string;\n    startCreateAt?: string; // ISO date time eg, 2019-10-05T11:10:05.123Z\n    endCreateAt?: string; // ISO date time, eg, 2019-10-05T11:59:59.999Z\n    projection: string[];\n    returnDeletedOrders?: boolean;\n    toBeesQueryParams(): BeesParam[];\n} /**\n * @monaco\n */\ninterface BeesParam {\n    name: string;\n    value: number | string | boolean | null;\n} /**\n * @monaco\n */\ninterface PageRequest {\n    page: number;\n    pageSize: number;\n    toBeesParams(): BeesParam[];\n} /**\n * @monaco\n */\ninterface LocalPageRequest {\n    pageNumber: number;\n    pageSize: number;\n} /**\n * @monaco\n * @monaco_include_deps\n */\ninterface Order {\n    orderNumber: string;\n    beesAccountId: string;\n    placementDate: string;\n    status: OrderStatus;\n    previousStatus: OrderStatus | null;\n    channel: string;\n    audit: OrderAudit;\n    delivery: any;\n    cancellation?: any;\n    combos: any[];\n    fee?: any;\n    location?: any;\n    empties: any;\n    items: any[];\n    messages: any[];\n    orderGenericInfo: any;\n    payment: any;\n    payments: any;\n    invoicing: any;\n    actionReason: any[];\n    summary: any;\n    vendor: OrderVendorData;\n    orderProperties: any[];\n    deleted: boolean;\n    purchaseId?: number;\n} interface OrderAudit {\n    createAt: string;\n    updateAt: string;\n} interface OrderVendorData {\n    id: string;\n    accountId: string;\n    orderNumber?: string;\n} /**\n * @monaco\n */\ninterface GrowUserPayload {\n    firstName: string;\n    lastName: string;\n    email: string;\n    roles: string;\n    country: string;\n    vendorId: string;\n    missionPriority: string[];\n    segmentation: string[];\n    orgId?: string;\n} /**\n * @monaco\n * @monaco_include_deps\n */\ninterface VendorV2 {\n    vendorId: string;\n    legalName: string;\n    displayName: string;\n    governmentId: string;\n    serviceModel: string;\n    country: string;\n    bccEmails: string[];\n    addresses: VendorV2Address[];\n    abiVendorId: string;\n    vendorParticipation: {\n        [key: string]: any;\n    };\n    integration: VendorV2Integration;\n    configurations: VendorV2Configurations;\n    createdAt: string;\n    updatedAt: string;\n    tier: string;\n    thumbnailUrl: string;\n    businessModel: string;\n    isManufacturer: boolean;\n    roles: VendorRoleType[];\n} interface VendorV2Address {\n    type: string;\n    address1: string;\n    address2: string;\n    latitude: string;\n    longitude: string;\n    city: string;\n    state: string;\n    zipcode: string;\n} interface VendorV2Integration {\n    ras: VendorRasType;\n    params: {\n        [key: string]: any;\n    };\n    financial: VendorV2FinancialIntegration;\n} interface VendorV2FinancialIntegration {\n    wellsfargo: VendorV2WellsFargoFinancialIntegration;\n} interface VendorV2WellsFargoFinancialIntegration {\n    role: string;\n    biller: string;\n    nameCompany: string;\n    version: string;\n    mobileApiKey: string;\n    webApiKey: string;\n    signature: string;\n    pem: string;\n} interface VendorV2Configurations {\n    features: VendorV2FeaturesConfiguration;\n    inventory: VendorV2InventoryConfigurations;\n    enforcement: VendorV2EnforcementConfigurations;\n    orders: VendorV2OrdersConfiguration;\n    fulfillment: VendorV2FulfilmentConfiguration;\n    pricingEngine: {\n        [key: string]: any;\n    };\n    account: VendorV2AccountConfiguration;\n    items: VendorV2ItemsConfigurations;\n    checkout: VendorV2CheckoutConfigurations;\n    users: VendorV2UsersConfiguration;\n    recommendation: VendorV2RecommendationConfiguration;\n    promotions: VendorV2PromotionsConfiguration;\n} interface VendorV2FeaturesConfiguration {\n    erpHandlesIsKeyAccount: boolean;\n} interface VendorV2InventoryConfigurations {\n    keyAccount: VendorV2InventoryConfiguration;\n    regularAccount: VendorV2InventoryConfiguration;\n} interface VendorV2InventoryConfiguration {\n    solutionType: VendorSolutionType;\n    model: VendorInvModelType;\n} interface VendorV2EnforcementConfigurations {\n    keyAccount: VendorV2EnforcementConfiguration;\n    regularAccount: VendorV2EnforcementConfiguration;\n} interface VendorV2EnforcementConfiguration {\n    enabled: boolean;\n} interface VendorV2OrdersConfiguration {\n    empties: VendorGenericEnabledDisabledEnum;\n    minimumOrder: VendorV2OrderLimit;\n    maximumOrder: VendorV2OrderLimit;\n    paymentMethods: string[];\n    paymentTerms: VendorV2PaymentTerm[];\n    zeroOrder: VendorGenericEnabledDisabledEnum;\n    zeroOrderSettings: VendorV2ZeroOrderSettings;\n    pickupOrderStatusManager: VendorPickupOrderStatusManagerType;\n    upcomingOrderPlacement: VendorGenericEnabledDisabledEnum;\n    split: VendorV2Split;\n} interface VendorV2OrderLimit {\n    type: VendorOrderLimitType;\n    value: number;\n    paymentMethods: string[];\n} interface VendorV2PaymentTerm {\n    termPeriods: VendorV2PaymentTermPeriod[];\n    type: string;\n} interface VendorV2PaymentTermPeriod {\n    days: number;\n} interface VendorV2ZeroOrderSettings {\n    emptiesEnabled: boolean;\n    redemptionsEnabled: boolean;\n} interface VendorV2Split {\n    redeemable: VendorV2RedeemableSplit;\n} interface VendorV2RedeemableSplit {\n    enabled: boolean;\n} interface VendorV2FulfilmentConfiguration {\n    coverageType: VendorFulfilmentCoverageType;\n    acceptedAccountTaxIdTypes: VendorAccountTaxIdType[];\n    segments: VendorV2SegmentsFulfilmentConfiguration;\n    alternativeCoverageType: VendorAlternativeCoverageType;\n    sellToKeyAccounts: boolean;\n    alternativeCoverageRestriction: VendorV2AlternativeCoverageRestriction;\n} interface VendorV2SegmentsFulfilmentConfiguration {\n    enabledSegmentedProducts: boolean;\n    consumptionTypes: VendorV2SegmentConsumptionType[];\n} interface VendorV2SegmentConsumptionType {\n    type: VendorConsumptionType;\n    values: string[];\n} interface VendorV2AlternativeCoverageRestriction {\n    dependsOnContractWithVendor: VendorV2DependsOnContractAlternativeCoverageRestriction;\n} interface VendorV2DependsOnContractAlternativeCoverageRestriction {\n    vendorId: string;\n    acceptedSubsegments: string[];\n} interface VendorV2AccountConfiguration {\n    beesAccountCreationEnabled: boolean;\n    newContractRegistrationEnabled: boolean;\n    newContractRegistration: VendorV2NewContractRegistrationAccountConfiguration;\n} interface VendorV2NewContractRegistrationAccountConfiguration {\n    imageUrl: string;\n    helpUrl: string;\n} interface VendorV2ItemsConfigurations {\n    keyAccount: VendorV2ItemsConfiguration;\n    regularAccount: VendorV2ItemsConfiguration;\n} interface VendorV2ItemsConfiguration {\n    display: VendorV2ItemsDisplayConfiguration;\n} interface VendorV2ItemsDisplayConfiguration {\n    strategy: VendorItemDisplayStrategyType;\n} interface VendorV2CheckoutConfigurations {\n    keyAccount: VendorV2CheckoutConfiguration;\n    regularAccount: VendorV2CheckoutConfiguration;\n} interface VendorV2CheckoutConfiguration {\n    deliveryWindowMethod: VendorDeliveryWindowMethodType;\n} interface VendorV2UsersConfiguration {\n    challenge: VendorV2UsersChallengeConfiguration;\n} interface VendorV2UsersChallengeConfiguration {\n    defaultLanguage: VendorV2UserChallengeLanguage;\n    otherLanguages: VendorV2UserChallengeLanguage[];\n} interface VendorV2UserChallengeLanguage {\n    language: string;\n    hintUrl: string;\n    tip: string;\n    fields: VendorV2UserChallengeLanguageField[];\n} interface VendorV2UserChallengeLanguageField {\n    type: VendorUserChallengeType;\n    title: string;\n    subtitle: string;\n} interface VendorV2RecommendationConfiguration {\n    hasOOSReplacement: boolean;\n    hasUpsellEnabled: boolean;\n    suggestedOrderUseCase: VendorSuggestedOrderUseCaseType;\n} interface VendorV2PromotionsConfiguration {\n    groupedFreeGoodsEnabled: boolean;\n} /**\n * @monaco\n */\ninterface IVendorV2Service {\n    findById(vendorId: string, env: CountryEnvironmentModel): Promise<VendorV2 | null>;\n} ";